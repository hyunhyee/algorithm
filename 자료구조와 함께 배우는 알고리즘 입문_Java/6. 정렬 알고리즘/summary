What is sorting? 대소 관계에 따라 데이터 집합을 일정한 순서로 나열

* 1. 오름차순 : 작은 데이터가 앞 2. 내림차순
* 안정된 정렬 : 같은 값을 정렬해도 그 전의 순서가 유지되는 것
* 1. 내부정렬 : 데이터 개수가 상대적으로 적을 때 2. 외부정렬 : 데이터가 많아서 하나의 배열 이상 필요시
* 핵심 요소: 교환, 선택, 삽입


버블정렬 bubble sort (=단순 교환 정렬 straight exchange sort) : 이웃한 두 요소의 대소 관계를 비교하고 필요에 대한 교환을 반복
* if 가장 작은 값을 앞으로 보내려고 한다면, 데이터 개수가 n개라면 n-1 번 비교 -> 가장 작은 값이 맨 앞에 정렬됨
* 비교하고 자리를 바꾸는 것을 pass
* 두 번째 자리에 원하는 값(두 번째로 작은 값을 넣는)을 넣기 위해선 n-2번 pass가 진행됨
* 그리고 모든 정렬이 끝나려면 n-1번의 pass가 진행되는데 마지막 값은 비교없이 마지막에 위치하니까

버블 정렬 프로그램 만들기
* 변수 i값을 0부터 n-2까지 1씩 증가시키며 패스를 n-1번 수행하는 프로그램

? n-2 왜냐면 배열은 0부터 시작하니까 n값을 넣으면 n-1 값까지만 비교하면 되는데 배열안의 숫자는 그것보다 -1 해야되므로

```
for(int i =0; i<n-1;i++){

}
``` 이렇게 무작위로 배열값을 나열하고
뒤에서 앞으로 비교& 자리를 바꾸는 코드를 작성한다.

'''실습 6-1
class BubbleSort{
static void swap(int[] 1, int idx1, int idx2} {
int t = a[idx1]
a[idx1] = a[idx2];
a[idx2] = t;
} //비교한 두 값을 교환

static void bubbleSort(int[] a, int n){
for(int i =0; i<n-1; i++)
for(int j= n-1; j>i; j--)
if(a[[j-1] > a[j])
swap(a, j-1, j);
}
```
