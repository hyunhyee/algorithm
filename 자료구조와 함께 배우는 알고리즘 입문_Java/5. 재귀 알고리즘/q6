```java
import java.util.Scanner;

class Recur3 {

	//--- 메서드 recur의 비재귀적 구현 ---//
	static void recur3(int n) {
		int[] nstk = new int[100];
		int[] sstk = new int[100];
		int ptr = -1;
		int sw = 0;

		while (true) {
			if (n > 0) {
				ptr++;
				nstk[ptr] = n;
				sstk[ptr] = sw;

				if (sw == 0)
					n = n - 1;
				else if (sw == 1) {
					n = n - 2;
					sw = 0;
				}
				continue;
			}
			do {
				n  = nstk[ptr];
				sw = sstk[ptr--] + 1;

				if (sw == 2) {
					System.out.println(n);
					if (ptr < 0)
						return;
				}
			} while (sw == 2);
		}
	}

	public static void main(String[] args) {
		Scanner stdIn = new Scanner(System.in);

		System.out.print("정수를 입력하세요 : ");
		int   x = stdIn.nextInt();

		recur3(x);
	}
}

```

1. 스택이 무엇인지, 어떻게 동작하는지.
2. 재귀 호출시에 실행 순서가 어떻게 되는지.
3. 스택과 재귀호출이 동일하다는 것.
4. 스택을 써서 재귀호출을 흉내낼 수 있다는 점.
